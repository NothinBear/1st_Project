<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQLMap 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
    
<sqlMap namespace="stock">
	
	<typeAlias alias="StockTO" type="com.estimulo.logistics.material.to.StockTO"/>
	
	<resultMap class="StockTO" id="stockResult">
		<result property="warehouseCode" column="WAREHOUSE_CODE"  />
		<result property="itemCode" column="ITEM_CODE"  />
		<result property="itemName" column="ITEM_NAME"  />
		<result property="unitOfStock" column="UNIT_OF_STOCK"  />
		<result property="totalStockAmount" column="TOTAL_STOCK_AMOUNT" />
		<result property="safetyAllowanceAmount" column="SAFETY_ALLOWANCE_AMOUNT"  />
		<result property="stockAmount" column="STOCK_AMOUNT"  />
		<result property="orderAmount" column="ORDER_AMOUNT"  />
		<result property="inputAmount" column="INPUT_AMOUNT" />			
		<result property="deliveryAmount" column="DELIVERY_AMOUNT" />
	</resultMap>
	
	<select id="selectStockList" resultMap="stockResult">
		SELECT * FROM STOCK order by item_code
	</select>
	
	<typeAlias alias="StockLogTO" type="com.estimulo.logistics.material.to.StockLogTO"/>
	
	<resultMap class="StockLogTO" id="stockLogResult">
		<result property="logDate" column="LOG_DATE"  />
		<result property="itemCode" column="ITEM_CODE"  />
		<result property="itemName" column="ITEM_NAME"  />
		<result property="amount" column="AMOUNT"  />
		<result property="reason" column="REASON"  />
		<result property="cause" column="CAUSE"  />
		<result property="effect" column="EFFECT"  />			
	</resultMap>
	
	<select id="selectStockLogList" parameterClass="map" resultMap="stockLogResult">
		select * from stock_log 
			where to_date(log_date,'YYYY-MM-DD HH24:MI:SS') 
			between to_date(#startDate#,'YYYY-MM-DD') 
			AND to_date(#endDate#,'YYYY-MM-DD') 
			order by log_date desc
	</select>
	
	
	<parameterMap class="map" id="warehousingParameter">
		<parameter property="orderNoList" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />			
		<parameter property="ERROR_CODE" javaType="java.lang.Integer" jdbcType="DECIMAL" mode="OUT" />
		<parameter property="ERROR_MSG" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
	</parameterMap>
	
	<procedure id="warehousing" parameterMap="warehousingParameter">
		<![CDATA[
		{call P_WAREHOUSING(?,?,?)}
		]]>
	</procedure>	
	
	
	<parameterMap class="map" id="updatesafetyAllowanceParameter">
		<parameter property="itemCode" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />		
		<parameter property="itemName" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />	
		<parameter property="safetyAllowanceAmount" javaType="java.lang.Integer" jdbcType="NUMBER" mode="IN" />		
		<parameter property="ERROR_CODE" javaType="java.lang.Integer" jdbcType="DECIMAL" mode="OUT" />
		<parameter property="ERROR_MSG" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
	</parameterMap>
		
	<procedure id="updatesafetyAllowance" parameterMap="updatesafetyAllowanceParameter">
		<![CDATA[
		{call P_ORDER_SAFETYALLOWANCE_CHANGE(?,?,?,?,?)}
		]]>
	</procedure>
	<typeAlias alias="StockChartTO" type="com.estimulo.logistics.material.to.StockChartTO"/>
	
	<resultMap class="StockChartTO" id="stockChartResult">
		<result property="itemName" column="ITEM_NAME_FOR_CODE"  />
		<result property="stockAmount" column="STOCK_AMOUNT"  />
		<result property="saftyAmount" column="SAFETY_ALLOWANCE_AMOUNT"  />
		<result property="allowanceAmount" column="ALLOWANCE_AMOUNT"  />			
	</resultMap>
	
	<select id="selectStockChart" resultMap="stockChartResult">
						SELECT CONCAT(CONCAT(S.item_name,' ('),CONCAT(S.item_code,')')) AS ITEM_NAME_FOR_CODE
								, S.STOCK_AMOUNT
								, S.SAFETY_ALLOWANCE_AMOUNT
								, S.STOCK_AMOUNT-SAFETY_ALLOWANCE_AMOUNT AS ALLOWANCE_AMOUNT
								FROM STOCK S, BOM B
						WHERE B.ITEM_CODE(+)=S.ITEM_CODE
						AND NOT S.ITEM_NAME IN( SELECT S.ITEM_NAME FROM STOCK S WHERE S.ITEM_NAME LIKE 'KC%')
						START WITH B.PARENT_ITEM_CODE='NULL'
						CONNECT BY PRIOR B.ITEM_CODE=B.PARENT_ITEM_CODE
						ORDER BY
							  LEVEL
							  , DECODE(ITEM_NAME_FOR_CODE,'카메라 본체 NO.1 (DK-AP01)',0,2)
							  , DECODE(ITEM_NAME_FOR_CODE,'카메라 본체 NO.2 (DK-AP02)',0,2)
							  , ITEM_NAME_FOR_CODE
	</select>
</sqlMap>